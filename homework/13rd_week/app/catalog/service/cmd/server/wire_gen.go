// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//+build !wireinject

package main

import (
	"demo/app/catalog/service/internal/biz"
	"demo/app/catalog/service/internal/conf"
	"demo/app/catalog/service/internal/data"
	"demo/app/catalog/service/internal/server"
	"demo/app/catalog/service/internal/service"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

// initApp init kratos application.
func initApp(confServer *conf.Server, registry *conf.Registry, confData *conf.Data, logger log.Logger, tracerProvider *trace.TracerProvider) (*kratos.App, func(), error) {
	client := data.NewEntClient(confData, logger)
	dataData, cleanup, err := data.NewData(client, logger)
	if err != nil {
		return nil, nil, err
	}
	beerRepo := data.NewBeerRepo(dataData, logger)
	beerUseCase := biz.NewBeerUseCase(beerRepo, logger)
	catalogService := service.NewCatalogService(beerUseCase, logger)
	grpcServer := server.NewGRPCServer(confServer, logger, tracerProvider, catalogService)
	httpServer := server.NewHTTPServer(confServer, catalogService, logger)
	registrar := server.NewRegistrar(registry)
	app := newApp(logger, grpcServer, httpServer, registrar)
	return app, func() {
		cleanup()
	}, nil
}
